DROP DATABASE if exists thesis_management;
CREATE DATABASE thesis_management;
USE thesis_management;


CREATE TABLE user (
  email varchar(63) NOT NULL UNIQUE,
  pass varchar(255) DEFAULT NULL,
  name varchar(63) DEFAULT NULL,
  type enum('student','teacher','secretary') DEFAULT NULL,
  reg_date datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (email)
);

CREATE TABLE student (
  email varchar(63) NOT NULL UNIQUE,
  am int(7) NOT NULL UNIQUE,
  cellphone int(10) NOT NULL UNIQUE,
  phone int(10) NOT NULL,

  FOREIGN KEY (email) REFERENCES user(email)
  ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE teacher (
  email varchar(63) NOT NULL UNIQUE,

  FOREIGN KEY (email) REFERENCES user(email)
  ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE secretary (
  email varchar(63) NOT NULL UNIQUE,

  FOREIGN KEY (email) REFERENCES user(email)
  ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE thesis (
  id int(30) NOT NULL AUTO_INCREMENT,
  teacher varchar(63) NOT NULL,
  title varchar(255) NOT NULL,
  description varchar(255) NOT NULL,

  PRIMARY KEY (id),

  FOREIGN KEY (teacher) REFERENCES teacher(email)
  ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE student_thesis_relation (
  stu_email varchar(63) NOT NULL,
  thesis_id int(30) NOT NULL,
  teach1_email varchar(63),
  teach2_email varchar(63),
  status enum('pending_assignment','active','being_examinated','finished','canceled') DEFAULT 'pending_assignment',
  grade float DEFAULT NULL,

  FOREIGN KEY (stu_email) REFERENCES student(email)
  ON UPDATE CASCADE ON DELETE CASCADE,

  FOREIGN KEY (teach1_email) REFERENCES teacher(email)
  ON UPDATE CASCADE ON DELETE CASCADE,

  FOREIGN KEY (teach2_email) REFERENCES teacher(email)
  ON UPDATE CASCADE ON DELETE CASCADE,

  FOREIGN KEY (thesis_id) REFERENCES thesis(id)
  ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE request(
  stu_email VARCHAR(63) NOT NULL,
  teach_email VARCHAR(63) NOT NULL,
  thesis_id INT(30) NOT NULL,
  status ENUM ('pending', 'declined', 'accepted'),
  request_datetime DATETIME NOT NULL DEFAULT current_timestamp(),
  reply_datetime DATETIME DEFAULT NULL,
  

  FOREIGN KEY (stu_email) REFERENCES student(email)
  ON UPDATE CASCADE ON DELETE CASCADE,

  FOREIGN KEY (teach_email) REFERENCES teacher(email)
  ON UPDATE CASCADE ON DELETE CASCADE,

  FOREIGN KEY (thesis_id) REFERENCES thesis(id) ON UPDATE
  CASCADE ON DELETE CASCADE 
); 

ALTER TABLE `student_thesis_relation` ADD `json` JSON NULL AFTER `grade`; 

ALTER TABLE `student` ADD `street` TEXT NULL DEFAULT NULL AFTER `am`, ADD `number` INT NULL DEFAULT NULL AFTER `street`, ADD `city` TEXT NOT NULL AFTER `number`, ADD `postcode` INT NULL DEFAULT NULL AFTER `city`, ADD `father_name` TEXT NULL DEFAULT NULL AFTER `postcode`;
